20/360
(20/360)*pi
(20/360)*2pi
(20/360)*2*pi
pi/180
(pi/180)*(303)
(pi/180)*(303-180)
(303/360)*2*pi
-pi+(303/360)*pi
((303-180)/360)*2*pi
((40-180)/360)*2*pi
#install.packages("CircStats") # Includes function for the MLE of rho and kappa in vonMises.
library(CircStats)
LogScaledInvChi2 <- function(x, v, tau){
(v/2)*log(tau^2*v/2) - lgamma(v/2) - (v*tau^2)/(2*x) - (1 + v/2)*log(x)
}
LogVonMisesPDF <- function(x, mu, kappa){
kappa*cos(x-mu) - log(2*pi) - log(besselI(kappa, 0))
}
logPosterior <- function(kappa, x, mu, v, tau){
sum(LogVonMisesPDF(x,mu,kappa)) + sum(LogScaledInvChi2(x, v, tau))
}
windDirections <- c(0.6981317, 5.2883476,5.6897734,4.9741884,5.1661746,5.4803339,0.3490659,
5.3756141, 5.2185345, 5.1661746) - pi
kappaVals <- seq(0.01,10,by = 0.01)
logPosts <- matrix(0,length(kappaVals),1)
count <- 0
for (kappa in kappaVals){
count <- count + 1
logPosts[count] <- logPosterior(kappa, x = windDirections, mu = 5.536801, v = 1, tau = 0.001)
}
plot(kappaVals, exp(logPosts), type = "l")
# Simulated data
vmData <- rvm(n=1000,mean=pi/4,k=0.2)
kappaVals <- seq(0.01,4,by = 0.01)
logPosts <- matrix(0,length(kappaVals),1)
count <- 0
for (kappa in kappaVals){
count <- count + 1
logPosts[count] <- logPosterior(kappa, x = vmData, mu = pi/4, v = 1, tau = 0.001)
}
plot(kappaVals, exp(logPosts -mean(logPosts)), type = "l")
